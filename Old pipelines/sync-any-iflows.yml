name: Sync any IFlows from tenant

on:
  workflow_dispatch:
    inputs:
      packageId:
        description: 'Package ID'
        required: true
      directory:
        description: 'Target Git directory (relative from repository root)'
        required: true
      includedIds:
        description: 'Included Ids (optional)'
        required: false
      excludedIds:
        description: 'Excluded Ids (optional)'
        required: false
      draft:
        description: 'Draft handling (optional) - SKIP (default value if empty), ADD, ERROR'
        required: false
      dirNaming:
        description: 'Naming convention for IFlow directories (optional) - ID (default value if empty), NAME'
        required: false
      message:
        description: 'Commit message (optional)'
        required: false
jobs:
  sync:
    runs-on: ubuntu-latest
    container:
      image: engswee/flashpipe:2.x.x-lite
    env:
      HOST_TMN: ${{ secrets.DEV_HOST_TMN }}
      BASIC_USERID: ${{ secrets.DEV_USER }}
      BASIC_PASSWORD: ${{ secrets.DEV_PASSWORD }}     
    steps:
    - uses: actions/checkout@v2
    - name: 'Set GIT_SRC_DIR for sync_to_git_repository.sh'
      run: |
        echo "GIT_SRC_DIR=$GITHUB_WORKSPACE/${{ github.event.inputs.directory }}" >> $GITHUB_ENV
    - name: 'Sync Any IFlows'
      run: /usr/bin/sync_to_git_repository.sh
      shell: bash
      env:
        PACKAGE_ID: ${{ github.event.inputs.packageId }}
        INCLUDE_IDS: ${{ github.event.inputs.includedIds }}
        EXCLUDE_IDS: ${{ github.event.inputs.excludedIds }}
        DRAFT_HANDLING: ${{ github.event.inputs.draft }}
        DIR_NAMING_TYPE: ${{ github.event.inputs.dirNaming }}
        COMMIT_MESSAGE: ${{ github.event.inputs.message }}
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        
#   build:
#     runs-on: ubuntu-latest
#     container:
#       image: engswee/flashpipe:2.x.x-lite
#     env:
#           HOST_TMN: $(dev-host-tmn)
#           BASIC_USERID: $(dev-user) # When using Basic authentication
#           BASIC_PASSWORD: $(dev-password) # When using Basic authentication
#     steps:
#       - uses: actions/checkout@v2
#       # Set environment variables for update_designtime_artifact.sh
#       - run: | 
#           echo "GIT_SRC_DIR=$GITHUB_WORKSPACE/${{ github.event.inputs.directory }}" >> $GITHUB_ENV
#           #echo "PARAM_FILE=$GITHUB_WORKSPACE/<path_to_param_file>" >> $GITHUB_ENV # Optional
#           #echo "MANIFEST_FILE=$GITHUB_WORKSPACE/<path_to_manifest_file>" >> $GITHUB_ENV # Optional
#       # Upload/Update design time
#       - name: 'Upload/Update design time'
#         run: /usr/bin/update_designtime_artifact.sh
#         shell: bash
#         env:
#           IFLOW_ID: IF1002_CPI_to_Mail_-_Weatherbit_-_LP
#           IFLOW_NAME: "IF1002 CPI to Mail - Weatherbit - LP"
#           PACKAGE_ID: CP001TrainingPackage
#           PACKAGE_NAME: "CP001 - TrainingPackage"
#           WORK_DIR: "$(Build.SourcesDirectory)/FlashPipe/IF1002 CPI to Mail - Weatherbit - LP"
#           #VERSION_HANDLING: <<version_no_handling_during_update> # Optional
#           #SCRIPT_COLLECTION_MAP: <comma_separated_source/target_pairs> # Optional
#       # Deploy runtime
#       - name: 'Upload/Update design time'
#         run: /usr/bin/deploy_runtime_artifact.sh
#         shell: bash
#         env:
#           IFLOW_ID: IF1002_CPI_to_Mail_-_Weatherbit_-_LP
